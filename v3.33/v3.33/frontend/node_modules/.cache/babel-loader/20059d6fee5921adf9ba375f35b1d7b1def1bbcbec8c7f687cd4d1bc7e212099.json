{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  theme: localStorage.getItem('theme') || 'light',\n  sidebarOpen: true,\n  notifications: [],\n  loading: {\n    global: false,\n    models: false,\n    api: false\n  },\n  modal: {\n    isOpen: false,\n    type: null,\n    data: null\n  }\n};\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    toggleTheme: state => {\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\n      localStorage.setItem('theme', state.theme);\n      // Update document class for Tailwind dark mode\n      if (state.theme === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n    },\n    toggleSidebar: state => {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    setSidebarOpen: (state, action) => {\n      state.sidebarOpen = action.payload;\n    },\n    addNotification: (state, action) => {\n      const notification = {\n        id: Date.now(),\n        duration: 5000,\n        // Default duration\n        ...action.payload\n      };\n      state.notifications.push(notification);\n    },\n    removeNotification: (state, action) => {\n      state.notifications = state.notifications.filter(notification => notification.id !== action.payload);\n    },\n    setLoading: (state, action) => {\n      const {\n        type,\n        value\n      } = action.payload;\n      state.loading[type] = value;\n    },\n    openModal: (state, action) => {\n      state.modal = {\n        isOpen: true,\n        type: action.payload.type,\n        data: action.payload.data || null\n      };\n    },\n    closeModal: state => {\n      state.modal = {\n        isOpen: false,\n        type: null,\n        data: null\n      };\n    }\n  }\n});\n\n// Actions\nexport const {\n  toggleTheme,\n  toggleSidebar,\n  setSidebarOpen,\n  addNotification,\n  removeNotification,\n  setLoading,\n  openModal,\n  closeModal\n} = uiSlice.actions;\n\n// Selectors\nexport const selectTheme = state => state.ui.theme;\nexport const selectSidebarOpen = state => state.ui.sidebarOpen;\nexport const selectNotifications = state => state.ui.notifications;\nexport const selectLoading = type => state => state.ui.loading[type];\nexport const selectModal = state => state.ui.modal;\n\n// Thunk for showing a notification with auto-removal\nexport const showNotification = notification => dispatch => {\n  const id = Date.now();\n  const duration = notification.duration || 5000;\n  dispatch(addNotification({\n    ...notification,\n    id\n  }));\n  setTimeout(() => {\n    dispatch(removeNotification(id));\n  }, duration);\n};\nexport default uiSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","theme","localStorage","getItem","sidebarOpen","notifications","loading","global","models","api","modal","isOpen","type","data","uiSlice","name","reducers","toggleTheme","state","setItem","document","documentElement","classList","add","remove","toggleSidebar","setSidebarOpen","action","payload","addNotification","notification","id","Date","now","duration","push","removeNotification","filter","setLoading","value","openModal","closeModal","actions","selectTheme","ui","selectSidebarOpen","selectNotifications","selectLoading","selectModal","showNotification","dispatch","setTimeout","reducer"],"sources":["C:/Users/WORK/Desktop/ProjectsNew/v3.33/frontend/src/redux/slices/uiSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  theme: localStorage.getItem('theme') || 'light',\r\n  sidebarOpen: true,\r\n  notifications: [],\r\n  loading: {\r\n    global: false,\r\n    models: false,\r\n    api: false\r\n  },\r\n  modal: {\r\n    isOpen: false,\r\n    type: null,\r\n    data: null\r\n  }\r\n};\r\n\r\nconst uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState,\r\n  reducers: {\r\n    toggleTheme: (state) => {\r\n      state.theme = state.theme === 'light' ? 'dark' : 'light';\r\n      localStorage.setItem('theme', state.theme);\r\n      // Update document class for Tailwind dark mode\r\n      if (state.theme === 'dark') {\r\n        document.documentElement.classList.add('dark');\r\n      } else {\r\n        document.documentElement.classList.remove('dark');\r\n      }\r\n    },\r\n    toggleSidebar: (state) => {\r\n      state.sidebarOpen = !state.sidebarOpen;\r\n    },\r\n    setSidebarOpen: (state, action) => {\r\n      state.sidebarOpen = action.payload;\r\n    },\r\n    addNotification: (state, action) => {\r\n      const notification = {\r\n        id: Date.now(),\r\n        duration: 5000, // Default duration\r\n        ...action.payload\r\n      };\r\n      state.notifications.push(notification);\r\n    },\r\n    removeNotification: (state, action) => {\r\n      state.notifications = state.notifications.filter(\r\n        notification => notification.id !== action.payload\r\n      );\r\n    },\r\n    setLoading: (state, action) => {\r\n      const { type, value } = action.payload;\r\n      state.loading[type] = value;\r\n    },\r\n    openModal: (state, action) => {\r\n      state.modal = {\r\n        isOpen: true,\r\n        type: action.payload.type,\r\n        data: action.payload.data || null\r\n      };\r\n    },\r\n    closeModal: (state) => {\r\n      state.modal = {\r\n        isOpen: false,\r\n        type: null,\r\n        data: null\r\n      };\r\n    }\r\n  }\r\n});\r\n\r\n// Actions\r\nexport const {\r\n  toggleTheme,\r\n  toggleSidebar,\r\n  setSidebarOpen,\r\n  addNotification,\r\n  removeNotification,\r\n  setLoading,\r\n  openModal,\r\n  closeModal\r\n} = uiSlice.actions;\r\n\r\n// Selectors\r\nexport const selectTheme = (state) => state.ui.theme;\r\nexport const selectSidebarOpen = (state) => state.ui.sidebarOpen;\r\nexport const selectNotifications = (state) => state.ui.notifications;\r\nexport const selectLoading = (type) => (state) => state.ui.loading[type];\r\nexport const selectModal = (state) => state.ui.modal;\r\n\r\n// Thunk for showing a notification with auto-removal\r\nexport const showNotification = (notification) => (dispatch) => {\r\n  const id = Date.now();\r\n  const duration = notification.duration || 5000;\r\n  \r\n  dispatch(addNotification({ ...notification, id }));\r\n  \r\n  setTimeout(() => {\r\n    dispatch(removeNotification(id));\r\n  }, duration);\r\n};\r\n\r\nexport default uiSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}